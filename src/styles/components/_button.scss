.btn {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: space-around;

  background: none;
  opacity: 1;
  transition: all 0.3s;
}

.btn[disabled] {
  opacity: 0.1;
  pointer-events: none;
}

.btn:hover,
.btn:focus {
  // We don't need the blue focus outline, since we will be defining our own focus
  outline: none;
}

/*--------------------------------------------------------
---------------------ICON-ONLY BUTTONS--------------------
--------------------------------------------------------*/

.btn--icon {
  width: 100%; 
  height: 25%;

  &__icon {
    width: 60%;
    height: 60%;

    // Inherit the color from .btn--icon since we want the icons and text to have the same color
    fill: currentColor;
  }

  &::before {
    position: absolute;
    left: 30%;
    display: inline-block;
    width: 2rem;

    padding: padding(XS) padding(M);
    // Inherit the color from .btn--icon since we want the icons and text to have the same color
    color: currentColor;
    content: attr(data-tool-tip);
    font-size: 2rem;
    opacity: 0;
    // Don't define transition for color, since right now color
    // goes off computed color. This means that the text will 'flash'
    // colors if we enable transition for that property.
    transition: background-color 0.3s, opacity 0.3s, left 0.3s, visibility 0.3s;
    visibility: hidden;
  }
}

.btn--icon:hover,
.btn--icon[data-focus-visible-added] {
  width: 110%;
  margin-left: -10%;
  border-bottom-left-radius: $radius-subtle;
  border-top-left-radius: $radius-subtle;

  &::before {
    left: 10%;
    opacity: 1;
    visibility: visible;
  }
}

//---------------SPECIFIC ICON ONLY BUTTONS----------------------

.btn--icon.clear-all { @include button-color-scheme(color(secondary)) }

.btn--icon.play { @include button-color-scheme(color(primary)) }

.btn--icon.play-auto { @include button-color-scheme(darken(color(primary), 10%)) }

.btn--icon.edit-canvas { @include button-color-scheme(color(tertiary)) }
